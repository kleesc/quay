version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: quay-postgres
    environment:
      POSTGRES_DB: quay
      POSTGRES_USER: quay
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quay -d quay"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for distributed locking
  redis:
    image: redis:7-alpine
    container_name: quay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # GC Worker
  gcworker:
    build:
      context: .
      dockerfile: Dockerfile.gcworker
    container_name: quay-gcworker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - QUAY_DATABASE_HOST=postgres
      - QUAY_DATABASE_PORT=5432
      - QUAY_DATABASE_USER=quay
      - QUAY_DATABASE_PASSWORD=password
      - QUAY_DATABASE_NAME=quay
      - QUAY_REDIS_HOST=redis
      - QUAY_REDIS_PORT=6379
    ports:
      - "8080:8080"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Namespace GC Worker
  namespacegcworker:
    build:
      context: .
      dockerfile: Dockerfile.namespacegcworker
    container_name: quay-namespacegcworker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - QUAY_DATABASE_HOST=postgres
      - QUAY_DATABASE_PORT=5432
      - QUAY_DATABASE_USER=quay
      - QUAY_DATABASE_PASSWORD=password
      - QUAY_DATABASE_NAME=quay
      - QUAY_REDIS_HOST=redis
      - QUAY_REDIS_PORT=6379
    ports:
      - "8081:8080"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Repository GC Worker
  repositorygcworker:
    build:
      context: .
      dockerfile: Dockerfile.repositorygcworker
    container_name: quay-repositorygcworker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - QUAY_DATABASE_HOST=postgres
      - QUAY_DATABASE_PORT=5432
      - QUAY_DATABASE_USER=quay
      - QUAY_DATABASE_PASSWORD=password
      - QUAY_DATABASE_NAME=quay
      - QUAY_REDIS_HOST=redis
      - QUAY_REDIS_PORT=6379
    ports:
      - "8082:8080"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: quay-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: quay-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: quay-workers-network